In this README guide, its's all about TOY PROBLEMS.You heard it,'toy'meaning simpleproblems.

We willfocus on finding javascript solutions to 3 main problems;
1)We will step by step make a studennt generator program that grades in the parameters of A - E.A.
2)We will create another program for a speed detector that detects the speed of a car and depending on how extra it goes awards demerit points.
3)We will generate an income calculator that will calculate the net pay versavee other incomes ata a fixed rate of 16%.
LICENSE;
This work has been fully and duelly done by myself, Joseph Oluoch. Having scheduled time for it and understood what I shoud do.




Challenge 3: Net Salary Calculator (Toy Problem)
Given the basic salary and benefits of an employee, write a program that would calculate the Payee Tax, NHIF, NSSF Deductions and net salary.

NB: Use KRA, NHIF, and NSSF values provided in the link below.

https://www.aren.co.ke/payroll/taxrates.htm Links to an external site.  

https://www.kra.go.ke/en/individual/calculate-tax/calculating-tax/payeLinks to an external site.
-So here again its about going through the salary and we will use alittle bit of loops and conditionals. We also need to go arithmetic because we need to find the salary, add it to the benefits ie overtime. From that we now have what to deduct expenses ie NSSF,NHIF,PAYE etc from.After knowing how much is deducted from the gross salary,weget the net pay and note that otherwise symbolises else condition. .We also need to prompt the user to key in their salary so that they get their output.






Challenge 1: Student Grade Generator (Toy Problem)
Write a program that prompts the user to input student marks. The input should be between 0 and 100. Then output the correct grade as follows: 

A > 79, B > 60 to 79, C > 59 to 49, D > 40 to 49, E > less 40.

Here, we are mainly going to focus on Javascript conditionals. The if, if else and else statements that give conditions.
First ,to begin with,let's assume our students are here for a purpose,know their grades. Thus they must be prompted to key in a figure for the answer they want.
That is exactly why we first declare our variable and in this variable,we now declare a function that prompts in the user to pass in an iteger valued from 0 and 100.
That means we also need to take careof those who may pass in a value past 100.For example:
 let learnerMarks= parseInt(prompt('key in a value not greater than 100'));
 After this create another function which now takes in a parameterof the integers,the name you give it is up to you but in our case we will call it MARKS. For the parameter.In our first value, a number greater than 100 is what we will first sort out in case someone gives past 100, then come back to the rubrics because the maximumthreshold given is 100.




//just a basic copy paste from my code to help understand the concept in case you can't get to the code.


Challenge 2: Speed Detector (Toy Problem)
Write a program that takes as input the speed of a car e.g 80. If the speed is less than 70, it should print “Ok”. Otherwise, for every 5 km/s above the speed limit (70), it should give the driver one demerit point and print the total number of demerit points.

For example, if the speed is 80, it should print: “Points: 2”. If the driver gets more than 12 points, the function should print: “License suspended”.

Here,it gets a littlebit technical but hey!more fun. It needs us to just think out of the box a little bit.
We equally focus on Javascript -if ststements also known as conditionals but again we have to get into some arithmetics.ie we have the concepts on 1 demerit point awarded on ascale of every 5km/sabove the limit. We can get these points by using operators like subtraction to get the additionalor maximum speed above 70(our speed limit). After that we divide the maximum by 5 to get the number of points ,create a function for that and eventually,12points and above should give a LICENSE SUSPENDED alert.Speed less than 70 awards an 'Ok'.Here too, we will declare our variable and also pass in a prompt ,assuming someone gets into the site and may need to key in their values.
Our core aim is to develop an algorithm that subtracts speed entered from70 if it'spast 70 and divides by 5 to get the demerritpoints.We thus introduce a new variable within the speed to link the points.We will call that newSpeed.
That's just how to dust it. An example is in the index.js file.